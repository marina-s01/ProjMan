#!/usr/bin/env python
# coding: utf-8

# In[2]:


import schedule #–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É
import time
import pandas as pd
import requests as req
import json
from geopy import geocoders
from geopy.geocoders import Nominatim
import telebot;
from telebot import types

bot = telebot.TeleBot('5688775484:AAFfcMbAm_t-qEOnuqanR63ivL4UJ-qJdeY') #–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω\
token_accu="7pNet2S89J6HC7m6DdPIh5beY93ZhPOS" #  —Ç–æ–∫–µ–Ω—ã: GuL1TlbAFOb3BDTnqE88YwIWmHXyhXCn    7pNet2S89J6HC7m6DdPIh5beY93ZhPOS    o8bQ6kOLDIm242Z9wZqvderTlzk6ynVR
df=pd.read_excel('./ntfDB.xlsx') # –¥–∞—Ç–∞—Ñ—Ä–µ–π–º, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —ç–∫—Å–µ–ª—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è, —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç—Ä–∏ —Å—Ç–æ–ª–±—Ü–∞: id —á–∞—Ç–∞, –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –≥–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
print(df)

def geo_pos(city: str): #–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —á–µ—Ä–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
    geolocator = geocoders.Nominatim(user_agent="telebot")
    latitude = str(geolocator.geocode(city).latitude)
    longitude = str(geolocator.geocode(city).longitude)
    return latitude, longitude

def code_location(latitude: str, longitude: str, token_accu: str): #–∫–æ–¥ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ accuweather –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–æ—Ä-–∞—Ç
    url_location_key = f'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey={token_accu}&q={latitude},{longitude}&language=ru'
    resp_loc = req.get(url_location_key, headers={"APIKey": token_accu})
    json_data = json.loads(resp_loc.text)
    code = json_data['Key']
    return code

def weather_day(cod_loc: str, token_accu: str):
    day=0
    url_weather = f'http://dataservice.accuweather.com/forecasts/v1/daily/5day/{cod_loc}?apikey={token_accu}&language=ru&details=true&metric=True'
    response = req.get(url_weather, headers={"APIKey": token_accu})
    json_data = json.loads(response.text)
    date=json_data['DailyForecasts'][day]['Date']#–¥–∞—Ç–∞
    temperaturemin=json_data['DailyForecasts'][day]['Temperature']['Minimum']['Value'] #—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ min
    temperaturemax=json_data['DailyForecasts'][day]['Temperature']['Maximum']['Value']
    feeltemperaturemin= json_data['DailyForecasts'][day]['RealFeelTemperature']['Minimum']['Value']
    feeltemperaturemax= json_data['DailyForecasts'][day]['RealFeelTemperature']['Minimum']['Value']#–æ—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    precipitation=json_data['DailyForecasts'][day]['Day']['PrecipitationProbability'] #–æ—Å–∞–¥–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
    windspeed=json_data['DailyForecasts'][day]['Day']['Wind']['Speed']['Value'] #—Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –∫–º/—á
    winddir=json_data['DailyForecasts'][day]['Day']['Wind']['Direction']['Localized']# –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞
    phrase=json_data['DailyForecasts'][day]['Day']['IconPhrase']#—Ñ—Ä–∞–∑–∞ –æ –ø–æ–≥–æ–¥–µ, –æ–±–ª–∞—á–Ω–æ –∏ —Ç–ø.
    return date, temperaturemin,temperaturemax ,feeltemperaturemin,feeltemperaturemax, precipitation, windspeed, winddir, phrase


def job(chatid : str, city : str):    #—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if chatid is not None:
        print ("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ") 
        ct=city
        latitude, longitude=geo_pos(city)
        cod_loc = code_location(latitude, longitude, token_accu)
        date, temperaturemin,temperaturemax ,feeltemperaturemin,feeltemperaturemax, precipitation, windspeed, winddir, phrase = weather_day(cod_loc, token_accu)
        temperature=(temperaturemax+temperaturemin)/2
        feeltemperature=(temperaturemax+temperaturemin)/2
        bot.send_message(chatid,f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –í –≥–æ—Ä–æ–¥–µ {ct} {phrase}, —Å—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temperature}¬∞C, –≤–µ—Ç–µ—Ä {winddir}"+" "+f"{windspeed} –∫–º/—á")
        if feeltemperature <= -20:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ –∏ –º–µ—Ç–µ–ª—å!üå¨‚ùÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —É—à–∏ , —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üë¢, –≤–∞—Ä–µ–∂–∫–∏üß§, —à–∞—Ä—Ñüß£ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ –∏ –∏–¥–µ—Ç —Å–Ω–µ–≥!‚ùÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —É—à–∏ , —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üë¢, –≤–∞—Ä–µ–∂–∫–∏üß§, —à–∞—Ä—Ñüß£ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ!‚òÉÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —É—à–∏ , —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üë¢, –≤–∞—Ä–µ–∂–∫–∏üß§, —à–∞—Ä—Ñüß£ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ!‚òÉÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —É—à–∏ , —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üë¢, –≤–∞—Ä–µ–∂–∫–∏üß§ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
        if feeltemperature > -20 and feeltemperature <= -10:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ –∏ –º–µ—Ç–µ–ª—å!üå¨‚ùÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏ü•æ, –≤–∞—Ä–µ–∂–∫–∏üß§, —à–∞—Ä—Ñüß£ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ –∏  —Å–Ω–µ–≥!‚ùÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏ü•æ, –≤–∞—Ä–µ–∂–∫–∏üß§ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ!‚òÉÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏ü•æ, –≤–∞—Ä–µ–∂–∫–∏üß§, —à–∞—Ä—Ñüß£ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ!‚òÉÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ –ø—É—Ö–æ–≤–∏–∫üß•, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Äüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏ü•æ, –≤–∞—Ä–µ–∂–∫–∏üß§ –∏ —à–µ—Ä—Å—Ç—è–Ω—ã–µ –Ω–æ—Å–∫–∏üß¶")
        if feeltemperature > -10 and feeltemperature <= 0:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ –∏ –º–µ—Ç–µ–ª—å! ‚õÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—Éü•º, —à–∞–ø–∫—Éüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üëû , –ø–µ—Ä—á–∞—Ç–∫–∏üß§  –∏ —à–∞—Ä—Ñüß£")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ –∏  —Å–Ω–µ–≥! ‚õÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—Éü•º, —à–∞–ø–∫—Éüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üëû –∏  –ø–µ—Ä—á–∞—Ç–∫–∏üß§")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ! ‚õÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—Éü•º, —à–∞–ø–∫—Éüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üëû , –ø–µ—Ä—á–∞—Ç–∫–∏üß§  –∏ —à–∞—Ä—Ñüß£")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ! ‚õÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—Éü•º, —à–∞–ø–∫—Éüé©, —Ç–µ–ø–ª—ã–µ –±–æ—Ç–∏–Ω–∫–∏üëû –∏  –ø–µ—Ä—á–∞—Ç–∫–∏üß§")
        if feeltemperature > 0 and feeltemperature <= 10:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –¥–æ–∂–¥—å –∏ —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä!üåßüå¨–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –∫—É—Ä—Ç–∫—Éü•ã –∏ –±–æ—Ç–∏–Ω–∫–∏üëû, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –¥–æ–∂–¥–µ–≤–∏–∫!")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –¥–æ–∂–¥—å!üåß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –∫—É—Ä—Ç–∫—Éü•ã –∏ –±–æ—Ç–∏–Ω–∫–∏üëû, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç–∏–∫!‚òîÔ∏è")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –Ω–∞ —É–ª–∏—Ü–µ –±—É–¥–µ—Ç —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä!üå¨ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –ø–∞–ª—å—Ç–æü•ã, –±–æ—Ç–∏–Ω–∫–∏üëû –∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —à–∞—Ä—Ñüß£")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±–µ–∑ –æ—Å–∞–¥–∫–æ–≤!üå¨ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –ø–∞–ª—å—Ç–æü•ã –∏ –±–æ—Ç–∏–Ω–∫–∏üëû")
        if feeltemperature > 10 and feeltemperature <= 15:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –æ—á–µ–Ω—å –≤–µ—Ç—Ä–µ–Ω–æ –∏  –¥–æ–∂–¥—å!üå¨üåß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Å–≤–∏—Ç–µ—Äü¶∫ –∏ –¥–∂–∏–Ω—Å—ãüëñ, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –¥–æ–∂–¥–µ–≤–∏–∫!")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –¥–æ–∂–¥—å!üåß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –≤–æ–¥–æ–ª–∞–∑–∫—É –∏ –¥–∂–∏–Ω—Å—ãüëñ, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç–∏–∫!‚òîÔ∏è")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –æ—á–µ–Ω—å –≤–µ—Ç—Ä–µ–Ω–æ!üå¨ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Å–≤–∏—Ç–µ—Äü¶∫ –∏ –¥–∂–∏–Ω—Å—ãüëñ")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞!ü§ó–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å –≤–æ–¥–æ–ª–∞–∑–∫—É –∏ –¥–∂–∏–Ω—Å—ãüëñ")
        if feeltemperature > 15:
            if precipitation > 60:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –¥–æ–∂–¥—å!üåß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Ñ—É—Ç–±–æ–ª–∫—Éüëï –∏ –¥–∂–∏–Ω—Å—ãüëñ, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –¥–æ–∂–¥–µ–≤–∏–∫!‚òîÔ∏è")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è  —Ç–µ–ø–ª–æ, –Ω–æ –±—É–¥–µ—Ç –¥–æ–∂–¥—å!üåß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Ñ—É—Ç–±–æ–ª–∫—Éüëï –∏ –¥–∂–∏–Ω—Å—ãüëñ, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç–∏–∫!‚òîÔ∏è")
            else:
                if windspeed >= 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –∂–∞—Ä–∫–∞—è –ø–æ–≥–æ–¥–∞! üôÉ–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Ñ—É—Ç–±–æ–ª–∫—Éüëï –∏ —à–æ—Ä—Ç—ãü©≥, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—á–∫–∏üï∂ –∏ –∫–µ–ø–∫—Éüß¢ –∏–ª–∏ —à–ª—è–ø—Éüëí")
                if windspeed < 36:
                    bot.send_message(chatid,f"–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞!üôÉ–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –Ω–∞–¥–µ—Ç—å —Ñ—É—Ç–±–æ–ª–∫—Éüëï –∏ —à–æ—Ä—Ç—ãü©≥, –∞ —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—á–∫–∏üï∂ –∏ –∫–µ–ø–∫—Éüß¢ –∏–ª–∏ —à–ª—è–ø—Éüëí")
                    
while True:  #–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    df=pd.read_excel('./ntfDB.xlsx') # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞, –µ—Å–ª–∏ –±—ã–ª—ã –∏–∑–º–µ–Ω–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    schedule.run_pending()
    schedule.clear() # –æ—á–∏—Å—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π
    for i in range(len(df)):
        schedule.every().day.at(str(df['ntftime'][i])).do(job, df['id'][i], df['city'][i]) #—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥ –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã —ç–∫—Å–µ–ª—å
    print(schedule.jobs)  #–ø–µ—á–∞—Ç–∞–µ—Ç –≤ –ø–∏—Ç–æ–Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    schedule.run_pending()
    time.sleep(10) # –∂–¥–µ—Ç 10 —Å–µ–∫—É–Ω–¥


# In[ ]:





# In[ ]:




